
#user  nobody;
worker_processes  auto;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout 10s;

    gzip  on;

    server {
        # Listen on port 443 for incoming HTTPS connections.
        listen 443 ssl http2;
        server_name mac-dev01.dinf.gebit.dev;

        # SSL Certificate paths.
        ssl_certificate /etc/ssl/certs/dinf.gebit.dev.fullchain.pem;
        ssl_certificate_key /etc/ssl/private/dinf.gebit.dev.privkey.pem;

        # Recommended SSL settings for security.
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers 'TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384';
        ssl_prefer_server_ciphers on;

        # Root location block to proxy all requests.
        location / {
            # Forward the request to the backend service running on localhost:3030.
            proxy_pass http://localhost:3000;
            proxy_http_version 1.1;
            proxy_set_header Connection "";

            # Set headers to pass along client information to the backend service.
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            proxy_connect_timeout 600;
            proxy_send_timeout 600;
            proxy_read_timeout 600;
            send_timeout 600;
            proxy_buffering off;
        }
    }

    # --- Server block for mac-dev02.dinf.gebit.dev ---
    server {
        # Listen on port 443 for incoming HTTPS connections.
        listen 443 ssl http2;
        server_name mac-dev02.dinf.gebit.dev;

        # SSL Certificate paths.
        ssl_certificate /etc/ssl/certs/dinf.gebit.dev.fullchain.pem;
        ssl_certificate_key /etc/ssl/private/dinf.gebit.dev.privkey.pem;

        # Recommended SSL settings for security.
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers 'TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384';
        ssl_prefer_server_ciphers on;

        # Root location block to proxy all requests.
        location / {
            # Forward the request to the backend service running on localhost:11434.
            proxy_pass http://localhost:11434;
            proxy_http_version 1.1;
            proxy_set_header Connection "";

            # Set headers to pass along client information to the backend service.
            proxy_set_header Host localhost:11434;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            proxy_connect_timeout 600;
            proxy_send_timeout 600;
            proxy_read_timeout 600;
            send_timeout 600;
            proxy_buffering off;
        }
    }

    # --- Server block for mac-dev03.dinf.gebit.dev ---
    server {
        # Listen on port 443 for incoming HTTPS connections.
        listen 443 ssl http2;
        server_name mac-dev03.dinf.gebit.dev;

        # SSL Certificate paths.
        ssl_certificate /etc/ssl/certs/dinf.gebit.dev.fullchain.pem;
        ssl_certificate_key /etc/ssl/private/dinf.gebit.dev.privkey.pem;

        # Recommended SSL settings for security.
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers 'TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384';
        ssl_prefer_server_ciphers on;

        proxy_http_version 1.1;
        proxy_set_header Connection "";

        # Set headers to pass along client information to the backend service.
        proxy_set_header Host localhost:10240;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        proxy_connect_timeout 600;
        proxy_send_timeout 600;
        proxy_read_timeout 600;
        send_timeout 600;
        proxy_buffering off;

        # 1. Route for /multilingual_e5_large -> http://localhost:10240
        location /multilingual_e5_large {
            # Strip the prefix '/multilingual_e5_large' from the URI 
            # and pass the remainder to the backend.
            # Example: /multilingual_e5_large/api/v1 -> /api/v1
            rewrite ^/multilingual_e5_large/(.*)$ /$1 break;
            
            proxy_pass http://localhost:10240;
        }

        # 2. Route for /gpt_oss_120b -> http://localhost:10241
        location /gpt_oss_120b {
            # Strip the prefix
            rewrite ^/gpt_oss_120b/(.*)$ /$1 break;
            
            proxy_pass http://localhost:10241;
        }

        # 3. Route for /qwen3_30b -> http://localhost:10242
        location /qwen3_30b {
            # Strip the prefix
            rewrite ^/qwen3_30b/(.*)$ /$1 break;
            
            proxy_pass http://localhost:10242;
        }
        
        # Default route for the root (/) if you want to show a general page 
        # or error for unmatched requests.
        location / {
            return 404 "Not Found";
        }
    }


    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

    proxy_connect_timeout 600;
    proxy_send_timeout 600;
    proxy_read_timeout 600;
    send_timeout 600;

    include servers/*;
}
